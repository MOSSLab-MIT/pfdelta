config_type: simple_batch
batch_name: pfnet_hyperparam_tuning_2
job_parameters:
  time: "18:00:00"
  p: "cpu-gpu-rtx8000"
  gpus: 1
  body: "source ~/.bashrc\nconda activate pfdelta\n__launch__"
model:
  name: powerflownet
  nfeature_dim: 6
  efeature_dim: 5
  output_dim: 6
  hidden_dim: _manual_list(64, 128, 256 | 64, 128, 256)
  n_gnn_layers: 5 # ALSO TRY 5 
  K: 4 # ALSO TRY 4
  dropout_rate: 0.2
dataset:
  datasets:
  - name: pfdeltaPFNet
    root_dir: data/pfdelta_data
    case_name: case118_seeds
    split: train
    model: PFNet
    task: 1.3
    add_bus_type: True
    transform: pfnet_data_mean0_var1 
  - name: pfdeltaPFNet
    root_dir: data/pfdelta_data
    case_name: case118_seeds
    split: val
    model: PFNet
    task: 1.3
    add_bus_type: True
    transform: pfnet_data_mean0_var1
optim:
  optimizer:
    lr: _manual_list(0.001, 0.0005 | 1e-3, 5e-4)
  train_params:
    batch_size: 64
    epochs: 150
    train_loss:
    - name: GNNTorchLoss
      torch_nn_name: MSELoss
      output_name: "bus__y"
    - name: pfn_masked_mse
      regularize: False
    - name: pfn_masked_mse
      regularize: True
    - name: universal_power_balance
      model: PFNet
  val_params:
    early_stop:
      decrease_for: 10 # Needs to be a divisor of report_every
      decrease_by: 0.01
      needs_best_every: 15
    report_every: 5
    batch_size: 64
    report_every: 5
    val_loss:
    - name: pfn_masked_mse
      regularize: False
    - name: pfn_masked_mse
      regularize: True
    - name: GNNTorchLoss
      torch_nn_name: MSELoss
      output_name: "bus__y"
    - name: universal_power_balance
      model: PFNet
functional:
  trainer_name: gnn_trainer
  seed: 11
  run_location: pfnet_hyperparam_tuning
  run_name: pfnet_hd%hidden_dim_lr%lr_layers_5_K_4